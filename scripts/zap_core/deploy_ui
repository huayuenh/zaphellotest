#!/usr/bin/env bash

clusterLogin

setupNamespace

getUIDeploymentFile

# This block can be removed if zap images get public ICR hosting. Pull secret wont be required
FIND_ICR=$(echo "${ZAP_UI_IMAGE}" | grep "${ICR_PATTERN}")
if [ "${FIND_ICR}" ]; then
  setPullSecret "${ZAP_UI_IMAGE}"
fi
FIND_ICR=$(echo "${ZAP_PROXY_IMAGE}" | grep "${ICR_PATTERN}")
if [ "${FIND_ICR}" ]; then
  setPullSecret "${ZAP_PROXY_IMAGE}"
fi

echo "=========================================================="
echo "UPDATING manifest with image information"
echo -e "Updating ${DEPLOYMENT_FILE} with image name: ${ZAP_UI_IMAGE}"
# find the yaml document index for the K8S deployment definition
DEPLOYMENT_DOC_INDEX=$(yq read --doc "*" --tojson "$DEPLOYMENT_FILE" | jq -r 'to_entries | .[] | select(.value.kind | ascii_downcase=="deployment") | .key')
if [ -z "${DEPLOYMENT_DOC_INDEX}" ]; then
  echo "No Kubernetes Deployment definition found in ${DEPLOYMENT_FILE}. Updating YAML document with index 0"
  DEPLOYMENT_DOC_INDEX=0
fi

DEPLOY_FILE="deploy.yml"
yq read --doc "${DEPLOYMENT_DOC_INDEX}" "${DEPLOYMENT_FILE}" > "${DEPLOY_FILE}"
# Update deployment with image name
cp "${DEPLOY_FILE}" "${DEPLOY_FILE}.bak"
cat < "${DEPLOY_FILE}.bak" \
  | yq write - "metadata.name" "${ZAP_DEPLOYMENT_NAME}" \
  | yq write - "spec.template.spec.containers[0].image" "${ZAP_UI_IMAGE}" \
  | yq write - "spec.template.spec.containers[1].image" "${ZAP_PROXY_IMAGE}" \
  > "${DEPLOY_FILE}"
DEPLOYMENT_FILE="${DEPLOY_FILE}" # use modified file

deploy

